plugins {
  id "org.sonarqube" version "3.3"
}

def BUILD_NUMBER = project.hasProperty('BUILD_NUMBER') ? "$BUILD_NUMBER" : 'undef'

sonarqube {
  properties {
    property "sonar.projectKey", "tzachz_github-comment-counter"
    property "sonar.organization", "tzachz"
    property "sonar.host.url", "https://sonarcloud.io"
  }
}

allprojects {
    apply plugin: 'java'
    apply plugin: 'idea'
    apply plugin: 'jacoco'

    project.group = 'com.tzachz'
    project.version = "0.1.$BUILD_NUMBER"

    repositories {
        mavenLocal()
        mavenCentral()
    }

    test {
        doFirst {
            // see https://discuss.gradle.org/t/getting-classnotfoundexception-org-jacoco-agent-rt-internal-9dd1198-premain-with-1-7s-jacoco-plugin/1444/3
            systemProperties['user.dir'] = workingDir
        }
        beforeTest { descriptor ->
            logger.lifecycle("Running " + descriptor)
        }
    }

    jacocoTestReport {
        reports {
            xml.enabled = true
            csv.enabled = false
        }
        dependsOn test
    }
}

subprojects { project ->
    dependencies {
        compile 'com.google.guava:guava:14.0.1'
        compile 'joda-time:joda-time:2.2'
        compile 'org.slf4j:slf4j-api:1.7.5'
        compile group: 'javax.xml.bind', name: 'jaxb-api', version: '2.3.1'

        testCompile 'org.hamcrest:hamcrest-library:1.3'
        testCompile 'org.mockito:mockito-core:1.9.0'
        testCompile('junit:junit:4.11') {
            exclude group: 'org.hamcrest', module: 'hamcrest-core'
        }
    }
}

dependencies {
    compile project(':leaderboard-server')
}

idea {
    project {
        jdkName = '11'
    }
}

idea.project.ipr {
    withXml { provider ->
        provider.node.component.find { it.@name == 'VcsDirectoryMappings' }.mapping.@vcs = 'Git'
    }
}
